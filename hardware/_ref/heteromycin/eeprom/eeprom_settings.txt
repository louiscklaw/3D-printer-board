########################################################################
# EEPROM settings text file
#
# Edit this file for your particular board and run through eepmake tool,
# then use eepflash tool to write to attached HAT ID EEPROM
#
# Tools available:
#  eepmake   Parses EEPROM text file and creates binary .eep file
#  eepdump   Dumps a binary .eep file as human readable text (for debug)
#  eepflash  Write or read .eep binary image to/from HAT EEPROM
#
########################################################################

########################################################################
# Vendor info

# 128 bit UUID. If left at zero eepmake tool will auto-generate
# RFC 4122 compliant UUID
product_uuid ba184594-9e9b-4886-a79a-3c380cfe95e4

# 16 bit product id
product_id 0xFE10

# 16 bit product version
product_ver 0x0001

# ASCII vendor string  (max 255 characters)
vendor "Heteromycin development team"

# ASCII product string (max 255 characters)
product "3D printer controller Heteromycin"


########################################################################
# GPIO bank settings, set to nonzero to change from the default.
# NOTE these setting can only be set per BANK, uncommenting any of
# these will force the bank to use the custom setting.

# drive strength, 0=default, 1-8=2,4,6,8,10,12,14,16mA, 9-15=reserved
gpio_drive 0

# 0=default, 1=slew rate limiting, 2=no slew limiting, 3=reserved
gpio_slew 0

# 0=default, 1=hysteresis disabled, 2=hysteresis enabled, 3=reserved
gpio_hysteresis 0

# If board back-powers Pi via 5V GPIO header pins:
# 0 = board does not back-power
# 1 = board back-powers and can supply the Pi with a minimum of 1.3A
# 2 = board back-powers and can supply the Pi with a minimum of 2A
# 3 = reserved
# If back_power=2 then USB high current mode will be automatically
# enabled on the Pi
back_power 2 # Heteromycin can provide up to 8A on the 5V rail

########################################################################
# GPIO pins, uncomment for GPIOs used on board
# Options for FUNCTION: INPUT, OUTPUT, ALT0-ALT5
# Options for PULL: DEFAULT, UP, DOWN, NONE
# NB GPIO0 and GPIO1 are reserved for ID EEPROM so cannot be set

#         GPIO  FUNCTION  PULL
#         ----  --------  ----

#####
# We define GPIO pins at startup as INPUTS and user programms can later
# define the needed behavior, this way we boot in a known state and don't
# cause any unforseen resets or problems.
#####

setgpio  2     ALT0     DEFAULT # SDA
setgpio  3     ALT0     DEFAULT # SCL
setgpio  4     INPUT    NONE    # MCU BOOT Pin
setgpio  5     INPUT    NONE # GPIO
setgpio  6     INPUT    NONE # GPIO
setgpio  7     ALT0     DEFAULT # SS_0
setgpio  8     ALT0     DEFAULT # SS_1
setgpio  9     ALT0     DEFAULT # MISO
setgpio  10    ALT0     DEFAULT # MOSI
setgpio  11    ALT0     DEFAULT # SCLK
#setgpio  12    INPUT     DEFAULT
setgpio  13    INPUT    DEFAULT # GPIO
setgpio  14    ALT0     DEFAULT # TX
setgpio  15    ALT0     DEFAULT # RX
#setgpio  16    INPUT     DEFAULT
#setgpio  17    INPUT     DEFAULT
setgpio  18    INPUT    NONE # MCU nRESET Pin
setgpio  19    INPUT    NONE # GPIO
#setgpio  20    INPUT     DEFAULT
#setgpio  21    INPUT     DEFAULT
#setgpio  22    INPUT     DEFAULT
#setgpio  23    INPUT     DEFAULT
#setgpio  24    INPUT     DEFAULT
#setgpio  25    INPUT     DEFAULT
#setgpio  26    INPUT     DEFAULT
#setgpio  27    INPUT     DEFAULT
